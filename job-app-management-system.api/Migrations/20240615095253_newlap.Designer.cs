// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using job_app_management_system.api.Data;

#nullable disable

namespace jobappmanagementsystem.api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240615095253_newlap")]
    partial class newlap
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("job_app_management_system.api.Models.Application", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("AcceptingResponse")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaximumApplication")
                        .HasColumnType("int");

                    b.Property<string>("PublishDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.JobApplication", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AiubId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BscAdmissionYear")
                        .HasColumnType("int");

                    b.Property<double?>("BscCGPA")
                        .HasColumnType("float");

                    b.Property<string>("BscDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BscGraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("BscUniversity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dob")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAiubian")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBscCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMscCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MscAdmissionYear")
                        .HasColumnType("int");

                    b.Property<double?>("MscCGPA")
                        .HasColumnType("float");

                    b.Property<string>("MscDepartment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MscGraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("MscUniversity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobApplications");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("JobApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("JobApplicationId");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.job_app_management_system.api.Models.Requirement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Requirements");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.job_app_management_system.api.Models.Responsibility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApplicationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Responsibilities");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.Skill", b =>
                {
                    b.HasOne("job_app_management_system.api.Models.JobApplication", "JobApplication")
                        .WithMany("Skills")
                        .HasForeignKey("JobApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JobApplication");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.job_app_management_system.api.Models.Requirement", b =>
                {
                    b.HasOne("job_app_management_system.api.Models.Application", "Application")
                        .WithMany("Requirements")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.job_app_management_system.api.Models.Responsibility", b =>
                {
                    b.HasOne("job_app_management_system.api.Models.Application", "Application")
                        .WithMany("Responsibilities")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.Application", b =>
                {
                    b.Navigation("Requirements");

                    b.Navigation("Responsibilities");
                });

            modelBuilder.Entity("job_app_management_system.api.Models.JobApplication", b =>
                {
                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
